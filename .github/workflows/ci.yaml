#name: Zipline CI (Ubuntu/macOS)
name: Zipline CI (Ubuntu)

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
#        os: [ubuntu-latest, macos-latest]
        os: [ubuntu-latest]
        python-version: [3.6, 3.7]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2  # use latest v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install TA lib (ubuntu)
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        wget https://s3.amazonaws.com/quantopian-orchestration/packages/ta-lib-0.4.0-src.tar.gz
        tar xvfz ta-lib-0.4.0-src.tar.gz
        cd ta-lib
        ./configure
        make
        sudo make install
        sudo ldconfig
    - name: Install TA lib (macOS)
      if: startsWith(matrix.os, 'macos')
      run: |
        brew install ta-lib
#    - name: Set Lockfile py 35
#      if: matrix.python-version == 3.5
#      run: |
#        echo "PIP_CONSTRAINT=etc/requirements_locked.txt" >> $GITHUB_ENV
    - name: install packages for py36
      if: matrix.python-version == 3.6
      run: |
        conda create -y --name test python=${{matrix.python-version}} pip pandas numpy scipy cython=0.29.21
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"
    - name: pip cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-py${{matrix.python-version}}-${{ hashFiles(env.PIP_CONSTRAINT) }}
        restore-keys: |
          ${{ runner.os }}-pip-py${{matrix.python-version}}-
    - name: Install bcolz
      env:
        DISABLE_BCOLZ_AVX2: true
      run: |
        conda init bash
        conda install -c conda-forge bcolz=1.2.1
    - name: Install requirements
      run: |
        conda init bash
        python -m pip install wheel
        python -m pip install -r etc/requirements_build.in
        python -m pip install -r etc/requirements_dev.in
        python -m pip install -e .
    - name: install pandas 1.1.5 for py37
      if: matrix.python-version == 3.7
      run: |
        pip install pandas==1.1.5
    - name: Run tests
      if: matrix.python-version == 3.6
      run: |
        nosetests tests
